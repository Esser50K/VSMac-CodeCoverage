
// This file has been generated by the GUI designer. Do not modify.
namespace CodeCoverage.Coverage
{
	public partial class TestCommandDialog
	{
		private global::Gtk.VBox vbox1;

		private global::Gtk.Frame frame1;

		private global::Gtk.Alignment GtkAlignment2;

		private global::Gtk.Entry expressionEntry;

		private global::Gtk.Label GtkLabel2;

		private global::Gtk.Frame previewFrame;

		private global::Gtk.Alignment GtkAlignment3;

		private global::Gtk.Label previewLabel;

		private global::Gtk.Label GtkLabel3;

		private global::Gtk.Frame frame3;

		private global::Gtk.Alignment GtkAlignment4;

		private global::Gtk.Label label6;

		private global::Gtk.Label GtkLabel4;

		private global::Gtk.Button buttonCancel;

		private global::Gtk.Button buttonOk;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget CodeCoverage.Coverage.TestCommandDialog
			this.Name = "CodeCoverage.Coverage.TestCommandDialog";
			this.Title = global::Mono.Unix.Catalog.GetString("Test Command");
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.BorderWidth = ((uint)(5));
			this.Resizable = false;
			this.AllowGrow = false;
			this.DestroyWithParent = true;
			this.Gravity = ((global::Gdk.Gravity)(5));
			// Internal child CodeCoverage.Coverage.TestCommandDialog.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.vbox1 = new global::Gtk.VBox();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.frame1 = new global::Gtk.Frame();
			this.frame1.Name = "frame1";
			this.frame1.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame1.Gtk.Container+ContainerChild
			this.GtkAlignment2 = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.GtkAlignment2.Name = "GtkAlignment2";
			this.GtkAlignment2.LeftPadding = ((uint)(12));
			// Container child GtkAlignment2.Gtk.Container+ContainerChild
			this.expressionEntry = new global::Gtk.Entry();
			this.expressionEntry.CanFocus = true;
			this.expressionEntry.Name = "expressionEntry";
			this.expressionEntry.IsEditable = true;
			this.expressionEntry.InvisibleChar = '‚óè';
			this.GtkAlignment2.Add(this.expressionEntry);
			this.frame1.Add(this.GtkAlignment2);
			this.GtkLabel2 = new global::Gtk.Label();
			this.GtkLabel2.Name = "GtkLabel2";
			this.GtkLabel2.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Test Execution Expression</b>");
			this.GtkLabel2.UseMarkup = true;
			this.frame1.LabelWidget = this.GtkLabel2;
			this.vbox1.Add(this.frame1);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.frame1]));
			w4.Position = 0;
			w4.Expand = false;
			w4.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.previewFrame = new global::Gtk.Frame();
			this.previewFrame.Name = "previewFrame";
			this.previewFrame.ShadowType = ((global::Gtk.ShadowType)(1));
			this.previewFrame.BorderWidth = ((uint)(10));
			// Container child previewFrame.Gtk.Container+ContainerChild
			this.GtkAlignment3 = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.GtkAlignment3.Name = "GtkAlignment3";
			this.GtkAlignment3.LeftPadding = ((uint)(12));
			// Container child GtkAlignment3.Gtk.Container+ContainerChild
			this.previewLabel = new global::Gtk.Label();
			this.previewLabel.Name = "previewLabel";
			this.previewLabel.Wrap = true;
			this.previewLabel.Justify = ((global::Gtk.Justification)(3));
			this.GtkAlignment3.Add(this.previewLabel);
			this.previewFrame.Add(this.GtkAlignment3);
			this.GtkLabel3 = new global::Gtk.Label();
			this.GtkLabel3.Name = "GtkLabel3";
			this.GtkLabel3.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Preview</b>");
			this.GtkLabel3.UseMarkup = true;
			this.previewFrame.LabelWidget = this.GtkLabel3;
			this.vbox1.Add(this.previewFrame);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.previewFrame]));
			w7.Position = 1;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.frame3 = new global::Gtk.Frame();
			this.frame3.Name = "frame3";
			this.frame3.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame3.Gtk.Container+ContainerChild
			this.GtkAlignment4 = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.GtkAlignment4.Name = "GtkAlignment4";
			this.GtkAlignment4.LeftPadding = ((uint)(12));
			// Container child GtkAlignment4.Gtk.Container+ContainerChild
			this.label6 = new global::Gtk.Label();
			this.label6.Name = "label6";
			this.label6.LabelProp = global::Mono.Unix.Catalog.GetString(@"The command line expression entered here will be run while gathering code coverage in order to run the unit tests
present in the project assembly.

It should invoke the desired unit testing command line tool.

Possible values:
- {ProjectOutputFile} = The test assembly generated by the selected project.

Example:
""nunit3-console.exe {ProjectOutputFile}""");
			this.label6.MaxWidthChars = 100;
			this.GtkAlignment4.Add(this.label6);
			this.frame3.Add(this.GtkAlignment4);
			this.GtkLabel4 = new global::Gtk.Label();
			this.GtkLabel4.Name = "GtkLabel4";
			this.GtkLabel4.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Setting Help</b>");
			this.GtkLabel4.UseMarkup = true;
			this.frame3.LabelWidget = this.GtkLabel4;
			this.vbox1.Add(this.frame3);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.frame3]));
			w10.Position = 2;
			w1.Add(this.vbox1);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(w1[this.vbox1]));
			w11.Position = 0;
			// Internal child CodeCoverage.Coverage.TestCommandDialog.ActionArea
			global::Gtk.HButtonBox w12 = this.ActionArea;
			w12.Name = "dialog1_ActionArea";
			w12.Spacing = 10;
			w12.BorderWidth = ((uint)(5));
			w12.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget(this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w13 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w12[this.buttonCancel]));
			w13.Expand = false;
			w13.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget(this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w14 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w12[this.buttonOk]));
			w14.Position = 1;
			w14.Expand = false;
			w14.Fill = false;
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.DefaultWidth = 689;
			this.DefaultHeight = 322;
			this.Show();
			this.expressionEntry.Changed += new global::System.EventHandler(this.OnCommandTextChanged);
			this.expressionEntry.KeyReleaseEvent += new global::Gtk.KeyReleaseEventHandler(this.expressionEntryKeyReleased);
			this.buttonCancel.Clicked += new global::System.EventHandler(this.OnCancelClicked);
			this.buttonOk.Clicked += new global::System.EventHandler(this.OnOkClicked);
		}
	}
}
